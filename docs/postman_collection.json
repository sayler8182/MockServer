{
	"info": {
		"_postman_id": "d42e7328-4d5e-4754-8a39-e96c8e856575",
		"name": "MockServer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8198514"
	},
	"item": [
		{
			"name": "Settings",
			"item": [
				{
					"name": "api/settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/select",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/select",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"select"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/remove",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/3aa62dc029a8456c9e0c5b3957252054",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"3aa62dc029a8456c9e0c5b3957252054"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/enable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/enable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/disable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/disable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/templating/enable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/ab76a89cfe5649d2ad961629e2a8d68f/templating/enable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"ab76a89cfe5649d2ad961629e2a8d68f",
								"templating",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/templating/disable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/ab76a89cfe5649d2ad961629e2a8d68f/templating/disable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"ab76a89cfe5649d2ad961629e2a8d68f",
								"templating",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test proxy\",\n    \"path\": \"https://aga.salesbook-ent.com\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/delay/mode",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delay_mode\": \"random\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/ab76a89cfe5649d2ad961629e2a8d68f/update/delay/mode",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"ab76a89cfe5649d2ad961629e2a8d68f",
								"update",
								"delay",
								"mode"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/delay/static",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delay\": \"200\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/ab76a89cfe5649d2ad961629e2a8d68f/update/delay/static",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"ab76a89cfe5649d2ad961629e2a8d68f",
								"update",
								"delay",
								"static"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/delay/random",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delay_from\": \"300\",\n    \"delay_to\": \"400\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/ab76a89cfe5649d2ad961629e2a8d68f/update/delay/random",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"ab76a89cfe5649d2ad961629e2a8d68f",
								"update",
								"delay",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/request/headers/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"name\",\n    \"value\": \"value\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/request/headers/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"request",
								"headers",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/request/headers/<header_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test proxy\",\n    \"path\": \"https://aga.salesbook-ent.com\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/request/headers/afb80682600544fb9916f05e90af6251",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"request",
								"headers",
								"afb80682600544fb9916f05e90af6251"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/response/headers/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"name\",\n    \"value\": \"value\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/response/headers/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"response",
								"headers",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/settings/proxy/<proxy_id>/response/headers/<header_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test proxy\",\n    \"path\": \"https://aga.salesbook-ent.com\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/settings/proxy/629e2e515da845078d27dcc29128dcd7/response/headers/c19f472d99fc4c9ca9f30ba291e19923",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"settings",
								"proxy",
								"629e2e515da845078d27dcc29128dcd7",
								"response",
								"headers",
								"c19f472d99fc4c9ca9f30ba291e19923"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Mocks",
			"item": [
				{
					"name": "api/mocks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/conflicts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/conflicts",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"conflicts"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d8e68d75957440c0ad4497abee883cce",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d8e68d75957440c0ad4497abee883cce"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/logs/count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/logs/count",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"logs",
								"count"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d8e68d75957440c0ad4497abee883cce/0d0c7d615c8f43968f1db1b1971ebed7",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d8e68d75957440c0ad4497abee883cce",
								"0d0c7d615c8f43968f1db1b1971ebed7"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/new",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/eecf92ff0bf347eda25257a8e410e267",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"eecf92ff0bf347eda25257a8e410e267"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/enable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/enable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/disable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/disable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Some name\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/request/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"PUT\",\n    \"path\": \"/some/path\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/request/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"request",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/request/rules/<rule_id>/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"Some Key\",\n    \"value\": \"Some value\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/1c5e39df4cc44da48963e736309175f9/request/rules/a3f9af15a2bf4a9d9b2f2997f85c59eb/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"1c5e39df4cc44da48963e736309175f9",
								"request",
								"rules",
								"a3f9af15a2bf4a9d9b2f2997f85c59eb",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/request/rules/<rule_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/1c5e39df4cc44da48963e736309175f9/request/rules/7234cfa9d050403cb9d4d47c7cce82d7",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"1c5e39df4cc44da48963e736309175f9",
								"request",
								"rules",
								"7234cfa9d050403cb9d4d47c7cce82d7"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/request/rules/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"match_parameter\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/1c5e39df4cc44da48963e736309175f9/request/rules/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"1c5e39df4cc44da48963e736309175f9",
								"request",
								"rules",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/method/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"method\": \"sequential\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/method/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"method",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/c5460f0f935b45d1bbeabbb427377894",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"c5460f0f935b45d1bbeabbb427377894"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/order_up",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/order_up",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"order_up"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/order_down",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519s/order_down",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519s",
								"order_down"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/enable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/enable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/disable",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/disable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/set",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/set",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"set"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/unset",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/unset",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"unset"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/single_use",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/872aa34ce2464b938987db718af642c3/single_use",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"872aa34ce2464b938987db718af642c3",
								"single_use"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/not_single_use",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/872aa34ce2464b938987db718af642c3/not_single_use",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"872aa34ce2464b938987db718af642c3",
								"not_single_use"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Response name\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/type",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"mock_json\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/update/type",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"update",
								"type"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/delay/mode",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delay_mode\": \"random\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/update/delay/mode",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"update",
								"delay",
								"mode"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/delay/static",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delay\": \"200\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/update/delay/static",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"update",
								"delay",
								"static"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/delay/random",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"delay_from\": \"300\",\n    \"delay_to\": \"400\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/update/delay/random",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"update",
								"delay",
								"random"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/status",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": 201\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/update/status",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"update",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/headers/<header_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/headers/92d804514a9343458c96d62846ca4dbc",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"headers",
								"92d804514a9343458c96d62846ca4dbc"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/headers/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"name\",\n    \"value\": \"value\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/headers/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"headers",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/body/json",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"{}\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/d45062c905844caca9f1248962623d63/840384db59a141fe8676ada5b1a4a16d/update/body/json",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"d45062c905844caca9f1248962623d63",
								"840384db59a141fe8676ada5b1a4a16d",
								"update",
								"body",
								"json"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/body/path",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body_path\": \"../../docs/resources/panel_mocks.png\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/update/body/path",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"update",
								"body",
								"path"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/update/body/script",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body_script\": \"../../docs/example/custom_response.py\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/fbe9617ce7514939b606abc8588ca1b6/a560de703c7e414fa9ddb64f075594a5/update/body/script",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"fbe9617ce7514939b606abc8588ca1b6",
								"a560de703c7e414fa9ddb64f075594a5",
								"update",
								"body",
								"script"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/interceptors/<interceptor_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/fc5fb5258bae484288648083e9e887e8",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"fc5fb5258bae484288648083e9e887e8"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/mocks/<mock_id>/<response_id>/interceptors/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Some name\",\n    \"type\": \"custom\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/mocks/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"mocks",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"new"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Process",
			"item": [
				{
					"name": "api/process",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/process",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"process"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/process/start",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"ios_record\",\n    \"file_path\": \"{{DOCS_PATH}}/example/simulator_recording.sh\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/process/start",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"process",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/process/stop",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"ios_record\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/process/stop",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"process",
								"stop"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/process/call",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"file_path\": \"{{HOME}}/Documents/MockServer/docs/example/simulator_recording_compress.sh\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/process/call",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"process",
								"call"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Environment",
			"item": [
				{
					"name": "api/environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/environment",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"environment"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/environment",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"environment"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/environment/<item_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/environment/c7c7d2468f2f418289ed0b4eeb979a79",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"environment",
								"c7c7d2468f2f418289ed0b4eeb979a79"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/environment/new",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SOME_NAME\",\n    \"value\": \"SOME_VALUE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/environment/new",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"environment",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/environment/<item_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/environment/eef0d4ab781a4d8baa4de4c654797122",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"environment",
								"eef0d4ab781a4d8baa4de4c654797122"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/environment/<item_id>/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SOME_NAME_NEW\",\n    \"value\": \"SOME_VALUE_NEW\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/environment/eef0d4ab781a4d8baa4de4c654797122/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"environment",
								"eef0d4ab781a4d8baa4de4c654797122",
								"update"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Interceptors",
			"item": [
				{
					"name": "api/interceptors/<mock_id>/<response_id>/interceptors/<interceptor_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/39e3aa17fae74d7da9f68708e3e23dd6",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"39e3aa17fae74d7da9f68708e3e23dd6"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/interceptors/<type>/configuration/example",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/value_replace/configuration/example",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"value_replace",
								"configuration",
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/interceptors/<type>/is_configurable",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/value_replace/is_configurable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"value_replace",
								"is_configurable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/interceptors/<mock_id>/<response_id>/interceptors/<interceptor_id>/update",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Some new name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/39e3aa17fae74d7da9f68708e3e23dd6/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"39e3aa17fae74d7da9f68708e3e23dd6",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/interceptors/<mock_id>/<response_id>/interceptors/<interceptor_id>/enable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Some new name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/39e3aa17fae74d7da9f68708e3e23dd6/enable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"39e3aa17fae74d7da9f68708e3e23dd6",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/interceptors/<mock_id>/<response_id>/interceptors/<interceptor_id>/disable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Some new name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/39e3aa17fae74d7da9f68708e3e23dd6/disable",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"39e3aa17fae74d7da9f68708e3e23dd6",
								"disable"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/interceptors/<mock_id>/<response_id>/interceptors/<interceptor_id>/update/configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"file_path\": \"some/absolute/path\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/interceptors/4cce30b3679e4eaea63016beba422aac/2f9dc90bd6d64797be62103b73d3e519/interceptors/39e3aa17fae74d7da9f68708e3e23dd6/update/configuration",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"interceptors",
								"4cce30b3679e4eaea63016beba422aac",
								"2f9dc90bd6d64797be62103b73d3e519",
								"interceptors",
								"39e3aa17fae74d7da9f68708e3e23dd6",
								"update",
								"configuration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "api/logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/logs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/logs/<mock_id>/logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/logs/937c1ed053c84d708d713e32dc99ca79/logs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"logs",
								"937c1ed053c84d708d713e32dc99ca79",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/logs/<log_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/logs/3d963336e03f453cb5c26c72ea5bd4aa",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"logs",
								"3d963336e03f453cb5c26c72ea5bd4aa"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/logs",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/logs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/logs/<mock_id>/logs",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/logs/937c1ed053c84d708d713e32dc99ca79/logs",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"logs",
								"937c1ed053c84d708d713e32dc99ca79",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/logs/<log_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/logs/7208424e0a8d42cea2a9f27140b39f37",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"logs",
								"7208424e0a8d42cea2a9f27140b39f37"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Importing / exporting",
			"item": [
				{
					"name": "api/import",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/konrad/Desktop/mocks.json"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/api/import",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/export/mocks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/export/mocks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"export",
								"mocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/export/mocks/<mock_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/export/mocks/d8e68d75957440c0ad4497abee883cce",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"export",
								"mocks",
								"d8e68d75957440c0ad4497abee883cce"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/export/environment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/export/environment",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"export",
								"environment"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/export/proxies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/export/proxies",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"export",
								"proxies"
							]
						}
					},
					"response": []
				},
				{
					"name": "api/export/proxies/<proxy_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/export/proxies/ab76a89cfe5649d2ad961629e2a8d68f",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"export",
								"proxies",
								"ab76a89cfe5649d2ad961629e2a8d68f"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "terminate",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/api/terminate",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"terminate"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "PORT",
			"value": "5012",
			"type": "string"
		},
		{
			"key": "BASE_URL",
			"value": "http://127.0.0.1:{{PORT}}",
			"type": "string"
		},
		{
			"key": "HOME",
			"value": "/Users/konrad",
			"type": "string"
		},
		{
			"key": "DOCS_PATH",
			"value": "/Users/konrad/Documents/MockServer/docs",
			"type": "string"
		}
	]
}